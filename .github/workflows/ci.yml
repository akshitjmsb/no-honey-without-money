name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run type-check || npx tsc --noEmit
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Test build output
      run: |
        if [ -d "dist" ]; then
          echo "Build successful - dist directory created"
        else
          echo "Build failed - dist directory not found"
          exit 1
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Check for secrets in code
      run: |
        # Check for hardcoded secrets (not environment variable references)
        if git grep -E "(api_key|password|secret|token)\s*[:=]\s*['\"][^'\"]{10,}" -- "*.tsx" "*.ts" "*.js" "*.jsx"; then
          echo "Potential hardcoded secrets found in code!"
          exit 1
        fi
        # Check for suspicious patterns that aren't environment variables
        if git grep -i "api_key\|password\|secret\|token" -- "*.tsx" "*.ts" "*.js" "*.jsx" | grep -v "process.env" | grep -v "your_api_key_here" | grep -v "GEMINI_API_KEY" | grep -v "JSON.stringify"; then
          echo "Potential secrets found in code!"
          exit 1
        fi
