name: 🚀 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: 🔍 Run tests
      run: npm run test -- --run --coverage
    
    - name: 🏗️ Build application
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: 📊 Generate changelog
      id: changelog
      run: |
        echo "## 📋 Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 🚀 New Features" >> CHANGELOG.md
        echo "- Performance optimizations" >> CHANGELOG.md
        echo "- Enhanced security measures" >> CHANGELOG.md
        echo "- Comprehensive testing suite" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 🐛 Bug Fixes" >> CHANGELOG.md
        echo "- Fixed XSS vulnerability in DeepDiveModal" >> CHANGELOG.md
        echo "- Improved error handling" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### 🔧 Improvements" >> CHANGELOG.md
        echo "- Standardized error handling patterns" >> CHANGELOG.md
        echo "- Added performance monitoring" >> CHANGELOG.md
        echo "- Enhanced API client with caching" >> CHANGELOG.md
    
    - name: 🏷️ Create Git tag
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.version }}"
        else
          TAG=${GITHUB_REF#refs/tags/}
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Created tag: $TAG"
    
    - name: 📦 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Release ${{ steps.tag.outputs.tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
    
    - name: 🚀 Deploy to Production
      if: github.event_name == 'push'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
        scope: ${{ secrets.VERCEL_ORG_ID }}
    
    - name: 📊 Release summary
      run: |
        echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Version: ${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Tests passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Build successful" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Deployed to production" >> $GITHUB_STEP_SUMMARY